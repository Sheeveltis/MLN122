import useGameStore from './gameStore'

function getHappinessColor(happiness) {
  if (happiness < 30) return '#e53935' // ƒë·ªè
  if (happiness < 60) return '#fbc02d' // v√†ng
  return '#43a047' // xanh l√°
}

function getStatusIcon(happiness, discontent) {
  if (discontent > 60) return 'üò°'
  if (happiness > 70) return 'üòä'
  if (happiness < 30) return 'üòû'
  return ''
}

function WorkerStatus() {
  const workers = useGameStore((s) => s.workers)
  if (workers.length === 0) return (
    <div style={{marginTop: 24, color: '#888', textAlign: 'center'}}>Ch∆∞a c√≥ c√¥ng nh√¢n n√†o.</div>
  )

  // M·ª©c s·ªëng mong ƒë·ª£i: trung b√¨nh productivity c·ªßa t·∫•t c·∫£ worker
  const expectedLiving = workers.length > 0
    ? workers.reduce((s, w) => s + w.productivity, 0) / workers.length
    : 1

  return (
    <div style={{ marginTop: 24 }}>
      <div style={{ fontWeight: 700, fontSize: 18, marginBottom: 10 }}>T√¨nh tr·∫°ng c√¥ng nh√¢n</div>
      <div style={{ display: 'flex', flexWrap: 'wrap', gap: 16 }}>
        {workers.map((w) => {
          const actualLiving = w.salary * (8 / w.hours)
          const discontent = Math.max(0, Math.round((expectedLiving - actualLiving) * 100))
          const happiness = w.happiness
          const color = getHappinessColor(happiness)
          const icon = getStatusIcon(happiness, discontent)
          return (
            <div key={w.id} style={{
              background: '#fff',
              borderRadius: 12,
              boxShadow: '0 2px 8px rgba(0,0,0,0.06)',
              padding: 16,
              minWidth: 180,
              maxWidth: 220,
              color: '#3A2C00',
              border: `2px solid ${color}`,
              display: 'flex',
              flexDirection: 'column',
              alignItems: 'flex-start',
              position: 'relative',
            }}>
              <div style={{ fontWeight: 600, fontSize: 16, marginBottom: 4 }}>
                C√¥ng nh√¢n #{w.id} {icon && <span style={{fontSize: 20, marginLeft: 6}}>{icon}</span>}
                {w.isStriking && (
                  <span style={{
                    background: '#e53935',
                    color: '#fff',
                    borderRadius: 6,
                    padding: '2px 8px',
                    marginLeft: 8,
                    fontWeight: 700,
                    fontSize: 14,
                  }}>‚õî ƒê√¨nh c√¥ng</span>
                )}
                {!w.isStriking && w.happiness < 30 && (
                  <span style={{
                    background: '#fbc02d',
                    color: '#3A2C00',
                    borderRadius: 6,
                    padding: '2px 8px',
                    marginLeft: 8,
                    fontWeight: 700,
                    fontSize: 14,
                  }}>‚ö†Ô∏è S·∫Øp ƒë√¨nh c√¥ng</span>
                )}
              </div>
              <div style={{ fontSize: 14, marginBottom: 2 }}>
                M·ª©c s·ªëng th·ª±c t·∫ø: <b>{actualLiving.toFixed(2)}</b>
              </div>
              <div style={{ fontSize: 14, marginBottom: 2 }}>
                M·ª©c s·ªëng mong ƒë·ª£i: <b>{expectedLiving.toFixed(2)}</b>
              </div>
              <div style={{ fontSize: 14, marginBottom: 2 }}>
                B·∫•t m√£n: <b>{discontent}</b>
              </div>
              <div style={{ fontSize: 14, marginBottom: 2 }}>
                H·∫°nh ph√∫c: <b style={{ color }}>{happiness}</b>
              </div>
            </div>
          )
        })}
      </div>
      <div style={{ fontSize: 13, color: '#888', marginTop: 12, fontStyle: 'italic' }}>
        Ch·ªâ s·ªë n√†y ph·∫£n √°nh s·ª± b·∫ßn c√πng h√≥a t∆∞∆°ng ƒë·ªëi c·ªßa c√¥ng nh√¢n
      </div>
    </div>
  )
}

export default WorkerStatus 